IF EXISTS ( SELECT TOP 1
                    S.SPECIFIC_NAME
            FROM    information_schema.routines s
            WHERE   s.ROUTINE_TYPE = 'PROCEDURE'
                    AND S.ROUTINE_NAME = 'USP_DOCVENTAS_SYNC' )
    BEGIN
        DROP PROC [dbo].[USP_DOCVENTAS_SYNC]
    END
GO
/*
USP_DOCVENTAS_SYNC
*/
CREATE PROCEDURE [dbo].[USP_DOCVENTAS_SYNC]
WITH ENCRYPTION
AS
SET NOCOUNT ON


DECLARE @TBLVENTA TABLE(INDICE INT IDENTITY,IDCIA INT, TIPODOCTO CHAR(1), SERIE VARCHAR(4), NUMERO BIGINT,ANULADO BIT, FECHA DATE, CTIPODOCTO CHAR(1), CNOMBRE VARCHAR(300), CNUMERO VARCHAR(20), CDIRECCION VARCHAR(300), SUBTOTAL MONEY,PORCIGV INT, IGV MONEY,TOTAL MONEY,SUNAT_CODIGO INT, SUNAT_DESCRIPCION VARCHAR(500))
DECLARE @IDCIA TINYINT, @TIPODOCTO CHAR(1), @SERIE VARCHAR(4),@NUMERO BIGINT, @ANULADO BIT, @FECHA DATE,@SUBTOTAL MONEY, @IGV MONEY,@TOTAL MONEY, @CNOMBRE VARCHAR(300), @CNUMERO VARCHAR(20), @CDIRECCION VARCHAR(300), @PORCIGV INT, @SUNAT_CODIGO INT,@SUNAT_DESCRIPCION VARCHAR(500), @CTIPODOCTO CHAR(1)
DECLARE @TBLCIA TABLE(INDICE INT IDENTITY,RUC CHAR(11),CODCIA CHAR(2),IDCIA INT)
DECLARE @MINVTA INT, @MAXVTA INT
DECLARE @MINCIA INT, @MAXCIA INT
DECLARE @TCODCIA CHAR(2), @TIDCIA INT, @RUC CHAR(11)
DECLARE @TIPMOV INT, @ESTADO CHAR(1)

DECLARE @SQL VARCHAR(MAX)
DECLARE @SQL2 VARCHAR(MAX)
DECLARE @TBLRESPONSE TABLE(CODIGO VARCHAR(20),MENSAJE VARCHAR(200))
DECLARE @DETALLE VARCHAR(MAX)
DECLARE @PAGO VARCHAR(MAX)

--VARIABLES PARA DETALLE DE VENTA
DECLARE @MINDET INT, @MAXDET INT
DECLARE @TBLDETALLE TABLE(INDICE INT IDENTITY,IDP BIGINT, SEC INT, ARTI VARCHAR(100),CANT DECIMAL(13,4),PRECIO MONEY, IMPORTE MONEY,HORA VARCHAR(20),FAMILIA VARCHAR(50), UMEDIDA VARCHAR(20))
DECLARE @IDP BIGINT, @SEC INT, @ARTI VARCHAR(100),@CANT DECIMAL(13,4),@PRECIO MONEY, @IMPORTE MONEY,@HORA VARCHAR(20),@FAMILIA VARCHAR(50), @UMEDIDA VARCHAR(20)
--VARIABLES PARA PAGOS
DECLARE @MINPAG INT, @MAXPAG INT
DECLARE @TBLPAGO TABLE(INDICE INT IDENTITY,IDFP INT, FP VARCHAR(100), IMP MONEY)
DECLARE @IDFP INT, @FP VARCHAR(100), @IMP MONEY

SET @TIPMOV = 10;
SET @ESTADO = 'N';
--1. OBTENIENDO TODAS LAS COMPAÑIAS ACTIVAS PARA ENVIAR LAS VENTAS PENDIENTES AL HOSTING
INSERT INTO @TBLCIA
(RUC,
    CODCIA,
    IDCIA
)
SELECT p.PAR_RUC_EMP, p.PAR_CODCIA,p.PAR_CODIGOREMOTO
FROM dbo.PARGEN p WHERE  p.PAR_ACTIVO = 1


SELECT @MINCIA = MIN(T.INDICE),@MAXCIA = MAX(T.INDICE) FROM @TBLCIA t

--2. RECORRIENDO TODAS LAS COMPAÑIAS ACTIVAS
WHILE @MINCIA <= @MAXCIA
BEGIN
	SELECT TOP 1 @TCODCIA = t.CODCIA, @TIDCIA = t.IDCIA, @RUC = t.RUC
	FROM @TBLCIA t WHERE T.INDICE = @MINCIA
	
	--3. OBTENIENDO LOS DATOS DE LAS VENTAS DE ACUERDO A CADA COMPAÑIA ACTIVA
	INSERT INTO @TBLVENTA
	(
		IDCIA,
		TIPODOCTO,
		SERIE,
		NUMERO,
		ANULADO,
		FECHA,
		CTIPODOCTO,
		CNOMBRE,		-- NOMBRE DEL CLIENTE
		CNUMERO,		-- NUMERO DE DOCUMENTO DEL CLIENTE
		CDIRECCION,		-- DIRECCION DEL CLIENTE
		SUBTOTAL,		-- SUBTOTAL DEL DOCUMENTO DE VENTA
		IGV,			-- IGV DEL DOCUMENTO DE VENTA
		TOTAL			-- TOTAL DEL DOCUMENTO DE VENTA
		,SUNAT_CODIGO,SUNAT_DESCRIPCION
	)
		SELECT
		P.PAR_CODIGOREMOTO,
		A.ALL_FBG,
		RIGHT('000' + RTRIM(LTRIM(A.ALL_NUMSER)),3),
		a.ALL_NUMFAC,
		0,
		a.ALL_FECHA_DIA,
		CASE WHEN COALESCE(RTRIM(LTRIM(c.CLI_RUC_ESPOSO)) ,'') = '' AND COALESCE(RTRIM(LTRIM(c.CLI_RUC_ESPOSA)) ,'') = '' THEN '' 
			 WHEN COALESCE(RTRIM(LTRIM(c.CLI_RUC_ESPOSO)) ,'') = '' THEN '1' ELSE '6' END,
		RTRIM(LTRIM(COALESCE(c.CLI_NOMBRE,''))),
		CASE WHEN COALESCE(c.CLI_RUC_ESPOSA,'') = '' THEN RTRIM(LTRIM(COALESCE(c.CLI_RUC_ESPOSO,''))) ELSE  RTRIM(LTRIM(COALESCE(c.CLI_RUC_ESPOSA,''))) END,
		RTRIM(LTRIM(COALESCE(C.CLI_CASA_DIREC,''))),
		SUM(a.ALL_BRUTO),
		SUM(a.ALL_IMPTO),
		a.ALL_NETO,
		a.respuesta_sunat_codigo,
		a.respuesta_sunat_descripcion
		FROM dbo.ALLOG a 
		INNER JOIN dbo.PARGEN p ON A.ALL_CODCIA = P.PAR_CODCIA
		INNER JOIN dbo.CLIENTES c ON a.ALL_CODCIA = c.CLI_CODCIA AND a.ALL_CODCLIE = c.CLI_CODCLIE
		INNER JOIN dbo.VEMAEST v ON A.ALL_CODVEN = V.VEM_CODVEN AND a.ALL_CODCIA = v.VEM_CODCIA
		WHERE COALESCE(a.ALL_REMOTO,0) = 0 AND a.ALL_CODCIA = @TCODCIA AND a.ALL_TIPMOV = @TIPMOV AND A.ALL_FLAG_EXT=@ESTADO
		and a.ALL_FECHA_DIA >= '20241003'
		AND a.ALL_FBG IN ('F','B','N','P')
		--AND a.ALL_NUMSER='1' AND a.ALL_NUMFAC IN (15110,15111)
		GROUP BY P.PAR_CODIGOREMOTO,a.ALL_FBG,a.ALL_NUMSER,a.ALL_NUMFAC,a.ALL_FECHA_DIA,c.CLI_NOMBRE,c.CLI_RUC_ESPOSA, c.CLI_RUC_ESPOSO, c.CLI_CASA_DIREC,a.ALL_NETO, a.ALL_NUMFAC_C,a.respuesta_sunat_codigo,a.respuesta_sunat_descripcion
		ORDER BY a.ALL_FBG,a.ALL_NUMSER,a.ALL_NUMFAC 

		--DOCUMENTOS ANULADOS
		INSERT INTO @TBLVENTA
	(
		IDCIA,
		TIPODOCTO,
		SERIE,
		NUMERO,
		ANULADO,
		FECHA,
		CTIPODOCTO,
		CNOMBRE,		-- NOMBRE DEL CLIENTE
		CNUMERO,		-- NUMERO DE DOCUMENTO DEL CLIENTE
		CDIRECCION,		-- DIRECCION DEL CLIENTE
		SUBTOTAL,		-- SUBTOTAL DEL DOCUMENTO DE VENTA
		IGV,			-- IGV DEL DOCUMENTO DE VENTA
		TOTAL			-- TOTAL DEL DOCUMENTO DE VENTA
		,SUNAT_CODIGO,SUNAT_DESCRIPCION
	)
		SELECT
		P.PAR_CODIGOREMOTO,
		A.ALL_FBG,
		RIGHT('000' + RTRIM(LTRIM(A.ALL_NUMSER)),3),
		a.ALL_NUMFAC,
		1,
		a.ALL_FECHA_DIA,
		CASE WHEN COALESCE(RTRIM(LTRIM(c.CLI_RUC_ESPOSO)) ,'') = '' AND COALESCE(RTRIM(LTRIM(c.CLI_RUC_ESPOSA)) ,'') = '' THEN '' 
			 WHEN COALESCE(RTRIM(LTRIM(c.CLI_RUC_ESPOSO)) ,'') = '' THEN '1' ELSE '6' END,
		RTRIM(LTRIM(COALESCE(c.CLI_NOMBRE,''))),
		CASE WHEN COALESCE(c.CLI_RUC_ESPOSA,'') = '' THEN RTRIM(LTRIM(COALESCE(c.CLI_RUC_ESPOSO,''))) ELSE  RTRIM(LTRIM(COALESCE(c.CLI_RUC_ESPOSA,''))) END,
		RTRIM(LTRIM(COALESCE(C.CLI_CASA_DIREC,''))),
		SUM(a.ALL_BRUTO),
		SUM(a.ALL_IMPTO),
		a.ALL_NETO,
		a.respuesta_sunat_codigo,
		a.respuesta_sunat_descripcion
		--,a.ALL_CODTRA
		FROM dbo.ALLOG a 
		INNER JOIN dbo.PARGEN p ON A.ALL_CODCIA = P.PAR_CODCIA
		INNER JOIN dbo.CLIENTES c ON a.ALL_CODCIA = c.CLI_CODCIA AND a.ALL_CODCLIE = c.CLI_CODCLIE
		INNER JOIN dbo.VEMAEST v ON A.ALL_CODVEN = V.VEM_CODVEN AND a.ALL_CODCIA = v.VEM_CODCIA
		WHERE COALESCE(a.ALL_REMOTO,0) = 0 AND a.ALL_CODCIA = @TCODCIA AND a.ALL_TIPMOV = @TIPMOV AND A.ALL_FLAG_EXT='E' AND a.ALL_CODTRA='1111'
		and a.ALL_FECHA_DIA >= '20241003'
		AND a.ALL_FBG IN ('F','B','N','P')
		--AND a.ALL_NUMSER='1' AND a.ALL_NUMFAC IN (15110,15111)
		GROUP BY P.PAR_CODIGOREMOTO,a.ALL_FBG,a.ALL_NUMSER,a.ALL_NUMFAC,a.ALL_FECHA_DIA,c.CLI_NOMBRE,c.CLI_RUC_ESPOSA, c.CLI_RUC_ESPOSO, c.CLI_CASA_DIREC,a.ALL_NETO, a.ALL_NUMFAC_C,a.respuesta_sunat_codigo,a.respuesta_sunat_descripcion
		--,a.ALL_CODTRA
		ORDER BY a.ALL_FBG,a.ALL_NUMSER,a.ALL_NUMFAC 
	--3. FIN
	--4. RECORRIENDO LAS VENTAS DE CADA COMPAÑIA ACTIVA
	SELECT @MINVTA = MIN(T.INDICE),@MAXVTA = MAX(T.INDICE) FROM @TBLVENTA t

	WHILE @MINVTA <= @MAXVTA
	BEGIN
		SELECT TOP 1 @IDCIA = t.IDCIA, @TIPODOCTO = t.TIPODOCTO, @SERIE = t.SERIE, @NUMERO = t.NUMERO, @ANULADO = t.ANULADO, @FECHA = t.FECHA, @CNOMBRE= REPLACE( T.CNOMBRE,'''','') , @CNUMERO = t.CNUMERO, @CDIRECCION = t.CDIRECCION, 
		@SUBTOTAL = t.SUBTOTAL, @IGV = t.IGV, @TOTAL = t.TOTAL, @PORCIGV = 18, @SUNAT_CODIGO = t.SUNAT_CODIGO, @SUNAT_DESCRIPCION = REPLACE(t.SUNAT_DESCRIPCION,'''','"'), @CTIPODOCTO = t.CTIPODOCTO
		FROM @TBLVENTA t WHERE t.INDICE = @MINVTA

		IF @SUNAT_CODIGO IS NULL
		BEGIN
			--INICIO - GRABANDO LA VENTA
			SET @SQL = 'call usp_venta_insert(''' + @RUC + ''',' + CAST(@IDCIA AS VARCHAR(10))+ ',''' + @TIPODOCTO +  ''', ''' + @SERIE+ ''', ' + CAST(@NUMERO AS VARCHAR(20)) + ',' + CAST(@ANULADO AS VARCHAR(5)) +  ', ''' + CONVERT(VARCHAR(8),@FECHA,112) +  ''', ''' + 
			@CTIPODOCTO + ''',''' +  @CNOMBRE + ''',''' + @CNUMERO + ''',''' + @CDIRECCION + ''', ' + CAST(@PORCIGV AS VARCHAR(5)) + ',' + CAST(@SUBTOTAL AS VARCHAR(20)) + ', ' + CAST(@IGV AS VARCHAR(20)) + ', ' + CAST(@TOTAL AS VARCHAR(20)) + ',' + 
			'null, null, @d1, @d2);'
		END
		ELSE
        BEGIN
			--INICIO - GRABANDO LA VENTA
			SET @SQL = 'call usp_venta_insert(''' + @RUC + ''',' + CAST(@IDCIA AS VARCHAR(10))+ ',''' + @TIPODOCTO +  ''', ''' + @SERIE+ ''', ' + CAST(@NUMERO AS VARCHAR(20)) + ',' + CAST(@ANULADO AS VARCHAR(5)) + ', ''' + CONVERT(VARCHAR(8),@FECHA,112) +  ''', ''' + 
			@CTIPODOCTO + ''',''' + @CNOMBRE + ''',''' + @CNUMERO + ''',''' + @CDIRECCION + ''', ' + CAST(@PORCIGV AS VARCHAR(5)) + ',' + CAST(@SUBTOTAL AS VARCHAR(20)) + ', ' + CAST(@IGV AS VARCHAR(20)) + ', ' + CAST(@TOTAL AS VARCHAR(20)) + ',' + 
			CAST(@SUNAT_CODIGO AS VARCHAR(20)) + ',''' + COALESCE(@SUNAT_DESCRIPCION,'') + ''', @d1, @d2);'
        END


	
	--SELECT @sql
		EXEC(@SQL) AT VENTAS;

		SET @SQL2 = 'SELECT * FROM OPENQUERY(VENTAS,''select @d1,@d2;'')';
		INSERT INTO @TBLRESPONSE
		(
			CODIGO,
			MENSAJE
		)
		EXEC(@SQL2)
		--FIN - GRABANDO LA VENTA
		
		-- VALIDANDO SI REGISTRO CORRECTAMENTE LA CABECERA DE LA TABLA
		IF (SELECT TOP 1 t.CODIGO FROM @TBLRESPONSE t) = 0
		BEGIN
			--OBTENIENDO EL DETALLE DE CADA VENTA
			INSERT INTO @TBLDETALLE
			(
				IDP,
				SEC,
				ARTI,
				CANT,
				PRECIO,
				IMPORTE,
				HORA,
				FAMILIA,
				UMEDIDA
			)
				SELECT f.FAR_CODART, -- AS 'idp',
				f.FAR_NUMSEC,-- AS 'sec',
				RTRIM(LTRIM(a.ART_NOMBRE)),-- AS 'arti',
				f.FAR_CANTIDAD,-- AS 'cant',
				CAST(f.FAR_PRECIO AS DECIMAL(10,2)),-- AS 'pre',
				CAST(f.FAR_CANTIDAD * f.FAR_PRECIO AS DECIMAL(10, 2)),-- AS 'imp',
				RTRIM(LTRIM(CAST(f.FAR_HORA AS VARCHAR(12)))),-- AS 'hr',
				COALESCE(RTRIM(LTRIM(t.TAB_NOMLARGO)),''),-- AS 'fam',
				'UNIDAD' -- AS 'um'
				FROM dbo.FACART f
				INNER JOIN dbo.ARTI a
				ON f.FAR_CODCIA = a.ART_CODCIA
				AND f.FAR_CODART = a.ART_KEY
				INNER JOIN dbo.TABLAS t ON t.TAB_TIPREG=122 AND a.ART_CODCIA= t.TAB_CODCIA AND a.ART_FAMILIA = t.TAB_NUMTAB
				WHERE f.FAR_TIPMOV = @TIPMOV
				AND f.FAR_FBG = @TIPODOCTO
				AND RIGHT('000' + RTRIM(LTRIM(f.FAR_NUMSER)),3) = @SERIE
				AND f.FAR_NUMFAC = @NUMERO
				AND f.FAR_ESTADO = @ESTADO

				--RECORRIENDO TABLA DETALLE DE VENTA - INICIO
				SELECT @MINDET = MIN(T.INDICE),@MAXDET = MAX(T.INDICE) FROM @TBLDETALLE t

				WHILE @MINDET <= @MAXDET
				BEGIN
					SELECT TOP 1 @IDP = t.IDP, @SEC = t.SEC, @ARTI = t.ARTI, @CANT = t.CANT, @PRECIO = t.PRECIO, @IMPORTE = t.IMPORTE, @HORA = t.HORA, @FAMILIA = T.FAMILIA, @HORA = t.HORA, @UMEDIDA = t.UMEDIDA
					FROM @TBLDETALLE t WHERE t.INDICE = @MINDET;
					SET @SQL = 'call usp_venta_detalle_insert('''+ @RUC + ''',' + CAST(@IDCIA AS VARCHAR(10))+ ',''' + @TIPODOCTO +  ''', ''' + @SERIE+ ''', ' + CAST(@NUMERO AS VARCHAR(20)) + ',' + CAST(@SEC AS VARCHAR(10)) + ',' + CAST(@IDP AS VARCHAR(20)) + ',''' + 
					@ARTI + ''',''' + @UMEDIDA + ''',''' + @FAMILIA + ''',''' + @HORA + ''',' + CAST(@CANT AS VARCHAR(10)) + ',' + CAST(@PRECIO AS VARCHAR(10)) + ',' + CAST(@IMPORTE AS VARCHAR(20)) + ', @d1, @d2)';
					--SELECT @SQL;
					--SELECT @IDP , @SEC , @ARTI ,@CANT ,@PRECIO , @IMPORTE ,@HORA ,@DELY ,@FAMILIA , @UMEDIDA
					EXEC(@SQL) AT VENTAS;

					SET @MINDET = @MINDET + 1
					SET @SQL = NULL
				END
				/*
	USP_DOCVENTAS_SYNC
	*/
				-- ALMACENANDO LOS PAGOS DEL DOCUMENTO - INICIO

				-- ALMACENANDO LOS PAGOS DEL DOCUMENTO - FIN
				--RECORRIENDO TABLA DETALLE DE VENTA - FIN
				INSERT INTO @TBLPAGO
				(
					IDFP,
					FP,
					IMP
				)
				SELECT st.SUT_SECUENCIA,-- AS 'idfp', 
				RTRIM(LTRIM(st.SUT_DESCRIPCION)), -- AS 'fp',
				SUM(a.ALL_IMPORTE_AMORT) -- AS 'imp'
				FROM dbo.ALLOG a 
				INNER JOIN dbo.SUB_TRANSA st ON a.ALL_SECUENCIA = st.SUT_SECUENCIA AND st.SUT_CODTRA=2401
				WHERE a.ALL_TIPMOV = @TIPMOV AND a.ALL_CODCIA = @TCODCIA AND RIGHT('000' + RTRIM(LTRIM(a.ALL_NUMSER)),3) = @SERIE AND a.ALL_NUMFAC = @NUMERO AND a.ALL_FBG = @TIPODOCTO
				GROUP BY st.SUT_SECUENCIA,st.SUT_DESCRIPCION

				SELECT @MINPAG = MIN(T.INDICE) FROM @TBLPAGO t
				SELECT @MAXPAG = MAX(T.INDICE) FROM @TBLPAGO t

				WHILE @MINPAG <= @MAXPAG
				BEGIN
					SELECT @IDFP = t.IDFP, @FP = t.FP, @IMP = t.IMP
					FROM @TBLPAGO t WHERE t.INDICE = @MINPAG

					SET @SQL = 'call usp_venta_pago_insert('''+ @ruc + ''',' + CAST(@IDCIA AS VARCHAR(10))+ ',''' + @TIPODOCTO +  ''', ''' + @SERIE+ ''', ' + CAST(@NUMERO AS VARCHAR(20)) + ',' + CAST(@IDFP AS VARCHAR(10)) + ',''' + @FP + ''',' + CAST(@IMP AS VARCHAR(20)) + ', @d1, @d2)';
					EXEC(@SQL) AT VENTAS;
					SET @MINPAG = @MINPAG + 1
					SET @SQL = NULL
				END
				UPDATE ALLOG SET ALL_REMOTO = 1 WHERE ALL_CODCIA = @TCODCIA AND ALL_TIPMOV = @TIPMOV AND RIGHT('000' + RTRIM(LTRIM(ALL_NUMSER)),3) = @SERIE AND ALL_NUMFAC = @NUMERO AND ALL_FBG = @TIPODOCTO
			END
			ELSE --HUBO UN ERROR AL REGISTRAR LA VENTA
			BEGIN
				-- ALMACENA UN LOG EN UNA TABLA
				INSERT INTO dbo.LOG_SYNC
				(
					CODIGO,
					DESCRIPCION,
					CODCIA,
					IDCIA,
					TIPODOCTO,
					SERIE,
					NUMERO,
					TRAMA
				)
				SELECT 
					T.CODIGO,
					T.MENSAJE,
					@TCODCIA,
					@TIDCIA,
					@TIPODOCTO,
					@SERIE,
					@NUMERO,
					@SQL
				FROM @TBLRESPONSE t
				UPDATE ALLOG SET ALL_REMOTO = 1 WHERE ALL_CODCIA = @TCODCIA AND ALL_TIPMOV = @TIPMOV AND RIGHT('000' + RTRIM(LTRIM(ALL_NUMSER)),3) = @SERIE AND ALL_NUMFAC = @NUMERO AND ALL_FBG = @TIPODOCTO
			END


		SET @MINVTA = @MINVTA + 1
		SET @SQL = ''
		SET @SQL2 = ''
		SET @DETALLE = ''
		DELETE FROM @TBLDETALLE;
		DELETE FROM @TBLRESPONSE;
		DELETE FROM @TBLPAGO;
	END
	--4. FIN

    DELETE FROM @TBLVENTA;
	SET @MINVTA = 0;
	SET @MAXVTA = 0;
	
	SET @MINCIA = @MINCIA + 1
END
RETURN;

GO




















